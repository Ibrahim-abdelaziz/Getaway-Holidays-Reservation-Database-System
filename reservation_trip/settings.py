"""
Django settings for reservation_trip project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import datetime
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g2#i_jf*ky_(h&c#2&c0u5nky^$ox03wg2ehn&c+uk_udayv7r'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_auth.registration',
    'djmoney',
    'djmoney.contrib.exchange',
    'accounts',
    'core',  

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'reservation_trip.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reservation_trip.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'mydb',
        'USER': 'ibrahim',
        'PASSWORD': '',
        # 'HOST': 'localhost',
        # 'PORT': '',
    }
}




# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

SITE_ID = 1


REST_USE_JWT = True

ACCOUNT_EMAIL_VERIFICATION = "none"


REST_FRAMEWORK = {
    
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',

    ),
}


JWT_AUTH = {
  
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=300),
    'JWT_ALLOW_REFRESH': True,
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=7),

}



EXCHANGE_BACKEND = 'djmoney.contrib.exchange.backends.FixerBackend'

CURRENCIES = ('USD', 'AUD')

# from djmoney.contrib.exchange.backends import FixerBackend,OpenExchangeRatesBackend
# from djmoney.contrib.exchange.models import get_rate
# OpenExchangeRatesBackend().update_rates()
# FixerBackend().update_rates()
# get_rate('USD', 'AUD', backend=OpenExchangeRatesBackend.name)
# get_rate('USD', 'AUD', backend=FixerBackend.name)

# USE_L10N = True

# import moneyed
# from moneyed.localization import _FORMATTER
# from decimal import ROUND_HALF_EVEN

# AUD = moneyed.add_currency(
#     code='AUD',
#     numeric='068',
#     name='Peso australia',
#     countries=('AUSTRALIA',)
# )

# # Currency Formatter will output 2.000,00 Bs.
# _FORMATTER.add_sign_definition(
#     'default',
#     AUD,
#     prefix=u'A$. '
# )

# _FORMATTER.add_formatting_definition(
#     'es_BO',
#     group_size=3, group_separator=".", decimal_point=",",
#     positive_sign="",  trailing_positive_sign="",
#     negative_sign="-", trailing_negative_sign="",
#     rounding_method=ROUND_HALF_EVEN
# )


# CURRENCY_CHOICES = [('USD', 'USD $'), ('AUD', 'AUD A$')]

# OPEN_EXCHANGE_RATES_URL = 'https://openexchangerates.org/api/historical/2017-01-01.json?symbols=EUR,NOK,SEK,CZK'
# FIXER_URL = 'http://data.fixer.io/api/2013-12-24?symbols=EUR,NOK,SEK,CZK'

# from djmoney.contrib.exchange.backends import OpenExchangeRatesBackend
# backend = OpenExchangeRatesBackend(url='https://openexchangerates.org/api/historical/2017-01-01.json')
# backend.update_rates(symbols='EUR,NOK,SEK,CZK')



